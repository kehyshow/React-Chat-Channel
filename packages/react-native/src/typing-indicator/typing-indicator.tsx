import React, { FC } from "react";
import { Text, View, Image } from "react-native";
import {
  CommonTypingIndicatorProps,
  useTypingIndicatorCore,
  getNameInitials,
  getPredefinedColor,
} from "@pubnub/common-chat-components";
import createDefaultStyle, { TypingIndicatorStyle } from "./typing-indicator.style";
import createMLDefaultStyle, { MessageListStyle } from "../message-list/message-list.style";
import { useStyle } from "../helpers";

export type TypingIndicatorProps = CommonTypingIndicatorProps & {
  /** Options to provide custom StyleSheet for the component. It will be merged with the default styles. */
  style?: TypingIndicatorStyle & MessageListStyle;
};

/** Subscribes to events generated by MessageInput to display information about users that are
 * currently typing messages.
 *
 * It can be displayed as a text denoting the user's name, or in a form similar to
 * a message that can be renderer inside MessageList.
 */
export const TypingIndicator: FC<TypingIndicatorProps> = (props: TypingIndicatorProps) => {
  const { activeUUIDs, getIndicationString, theme, users } = useTypingIndicatorCore(props);
  const style = useStyle<TypingIndicatorStyle>({
    theme,
    createDefaultStyle,
    customStyle: props.style,
  });
  const messageStyle = useStyle<MessageListStyle>({
    theme,
    createDefaultStyle: createMLDefaultStyle,
    customStyle: props.style,
  });

  const renderUserBubble = (uuid) => {
    const user = users.find((u) => u.id === uuid);

    return (
      <View style={messageStyle.message} key={uuid}>
        <View style={[messageStyle.messageAvatar, { backgroundColor: getPredefinedColor(uuid) }]}>
          {user?.profileUrl ? (
            <Image
              style={messageStyle.messageAvatarImage}
              source={{ uri: user.profileUrl }}
            ></Image>
          ) : (
            <Text style={messageStyle.messageAvatarText}>
              {getNameInitials(user?.name || uuid)}
            </Text>
          )}
        </View>
        <View style={messageStyle.messageMain}>
          <View style={messageStyle.messageTitle}>
            <Text style={messageStyle.messageAuthor}>{user?.name || "Unknown User"}</Text>
          </View>
          <Text style={messageStyle.messageBubble}>is typing...</Text>
        </View>
      </View>
    );
  };

  return (
    <>
      {!props.showAsMessage && !!activeUUIDs.length && (
        <Text style={style.typingIndicator}>{getIndicationString()}&nbsp;</Text>
      )}
      {props.showAsMessage && activeUUIDs.map((uuid) => renderUserBubble(uuid))}
    </>
  );
};

TypingIndicator.defaultProps = {
  showAsMessage: false,
};
